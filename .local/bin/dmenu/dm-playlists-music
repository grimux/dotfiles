#!/usr/bin/bash
#
# A script for using my music playlists in mpd.
# Uses mpc to load, configure, and play everything.
#

### Variables ###
#
# MPD playlist directory
playlist_dir="$HOME/.config/mpd/playlists"

# Array of playlists.
# Takes all the files from the playlist directory and adds them to the array.
# This array is dynamic and will change depending on the contents of the directory
playlist_files=($playlist_dir/*)

# Array of playlist names
# awk is used to strip the file path and leave just the file name. -F'/' sets the delimiter to /
# sed is used to strip the file extension.
playlist_names=$(printf '%s\n' "${playlist_files[@]}" | awk -F'/' '{print $NF}' | sed 's/.m3u//')


### Functions ###
#
# Function to open playlist in dmenu
open_in_dmenu() {
	# Piping the array into dmenu.
	printf '%s\n' "${playlist_names[@]}" | dmenu -i -l 20 -p 'Playlist:'
}

# Check if the playlist exists
check_playlist() {
	# Exists flag.
	exist=0

	# Name of playlist to check.
	name=$1

	# Check for a match in the array.
	for i in ${playlist_names[@]}; do
		# If a match is found, set exists flag to 1.
		if [ "$name" == "$i" ]; then
			exist=1
		fi
	done

	# Return the result of the check.
	# 1 if it exists, 0 if not.
	echo $exist
}

# Message if the playlist is not found.
no_playlist() {
	echo "Playlist not found."
	notify-send "playlist error" "That playlist does not exist."
	exit 1
}

# Prepare mpd for playback and start
load_mpc() {
	# Argument passed is the location of the playlist file.
	# $playlist_directory/$playlist_name.m3u
	playlist_name=$1

	# Clear mpd playlist
	mpc clear > /dev/null

	# Logic to control if mpd should enable randomize mode or not.
	# If a playlist name matches, disable random.
	case $playlist_name in
		# Playlists that I do not want randomized.
		blood|calm|darkside_flac|meltdown|silent_chill|silent_chill_redux|rare)
			# Disable random mode.
			mpc random off > /dev/null
			;;
		# Everything else will be randomized.
		*)
			# Enable random mode.
			mpc random on > /dev/null
			;;
	esac

	# Enable repeat mode.
	mpc repeat on > /dev/null

	# Load the playlist
	mpc load "$playlist_name"

	# Play
	mpc play
}

### Main ###
#
main() {
	# Check if the argument passed to the script is empty
	# If so, capture the output of open_in_dmenu into $choice
	if [ -z "$1" ]; then
		choice=$(open_in_dmenu)
	# Otherwise use the argument as the playlist name
	else
		choice="$1"
	fi

	# Check to see if the playlist has a match in the array
	does_playlist_exist=$(check_playlist $choice)

	# If the playlist exists, pass it to load_mpc function
	if [ $does_playlist_exist -eq 1 ]; then
		load_mpc $choice
	# If it doesn't exist, call the no_playlist function
	else
		no_playlist
	fi
}

# Call main
main "$@"

### End ###
exit 0
