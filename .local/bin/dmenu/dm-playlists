#!/usr/bin/bash
# 
# A script for using my playlists in mpd.
# Uses mpc to load, configure, and play everything.
#

### Variables ###
#
# MPD playlist directory
playlist_dir="$HOME/.config/mpd/playlists"

# Array of playlists.
# Takes all the files from the playlist directory and adds them to the array.
# This array is dynamic and will change depending on the contents of the directory
playlist_files=($playlist_dir/*)

# Array of playlist names
# awk is used to strip the file path and leave just the file name. -F'/' sets the delimiter to /
# sed is used to strip the file extension.
playlist_names=$(printf '%s\n' "${playlist_files[@]}" | awk -F'/' '{print $NF}' | sed 's/.m3u//')


### Functions ###
#
# Function to open playlist in dmenu
open_in_dmenu() {
	# Piping the array into dmenu.
	printf '%s\n' "${playlist_names[@]}" | dmenu -i -l 20 -p 'Playlist:'
}

# Check if the playlist exists
check_playlist() {
	exist=0
	name=$1

	# Check for a match in the array
	for i in ${playlist_names[@]}; do
		if [ "$name" == "$i" ]; then
			exist=1
		fi
	done

	# Return 1 if exists, 0 if not
	echo $exist
}

# Message if the playlist is not found
no_playlist() {
	echo "Playlist not found."
	notify-send "playlist error" "That playlist does not exist."
	exit 1
}

# Prepare mpd for playback and start
load_mpc() {
	argument=$1
	mpc clear > /dev/null
	mpc random on > /dev/null
	mpc repeat on > /dev/null
	mpc load "$argument"
	mpc play
}

### Entry point ###
#
# Check if the argument passed to the script is empty
# If so, capture the output of open_in_dmenu into $choice
if [ -z "$1" ]; then
	choice=$(open_in_dmenu)
# Otherwise use the argument as the playlist name
else
	choice="$1"
fi

# Check to see if the playlist has a match in the array
does_playlist_exist=$(check_playlist $choice)

# If the playlist exists, pass it to load_mpc function
if [ $does_playlist_exist -eq 1 ]; then
	load_mpc $choice
# If it doesn't exist, call the no_playlist function
else
	no_playlist
fi

### End ###
exit 0
