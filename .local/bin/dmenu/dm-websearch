#!/usr/bin/env bash
#
# A script to search the web using various search engines and websites.
#

### Script Fail Events ###
# e - script stops on error
# u - error if undefined variable
# o pipefail - script fails if command piped fails
# x - output each line (debug)
#
#set -euox pipefail
set -euo pipefail


##############
### Config ###
##############
DMBROWSER="$BROWSER"
DMENU="dmenu -i -l 20 -p"
FMENU="fzf --bind=enter:replace-query+print-query --border=rounded --margin=5% --color=dark --height 100% --reverse --header=$(basename "$0") --info=hidden --header-first --prompt"


#########################
### Web Site Searches ###
#########################
declare -A websearch

# Search Engines
#websearch[bing]="https://www.bing.com/search?q="
#websearch[brave]="https://search.brave.com/search?q="
websearch[duckduckgo]="https://duckduckgo.com/?q="
#websearch[gemini search \(https\)]="https://portal.mozz.us/gemini/geminispace.info/search%3F"
websearch[google]="https://www.google.com/search?q="
#websearch[qwant]="https://www.qwant.com/?q="
#websearch[swisscows]="https://swisscows.com/web?query="
#websearch[yandex]="https://yandex.com/search/?text="

# Information/News
#websearch[bbcnews]="https://www.bbc.co.uk/search?q="
#websearch[cnn]="https://www.cnn.com/search?q="
#websearch[googlenews]="https://news.google.com/search?q="
websearch[wikipedia]="https://en.wikipedia.org/w/index.php?search="
#websearch[wiktionary]="https://en.wiktionary.org/w/index.php?search="

# Social Media
websearch[reddit]="https://www.reddit.com/search/?q="
#websearch[odysee]="https://odysee.com/$/search?q="
websearch[youtube]="https://www.youtube.com/results?search_query="

# Online Shopping
websearch[amazon]="https://www.amazon.com/s?k="
websearch[craigslist]="https://www.craigslist.org/search/sss?query="
websearch[ebay]="https://www.ebay.com/sch/i.html?&_nkw="
#websearch[gumtree]="https://www.gumtree.com/search?search_category=all&q="

# Linux
websearch[archaur]="https://aur.archlinux.org/packages/?O=0&K="
websearch[archpkg]="https://archlinux.org/packages/?sort=&q="
websearch[archwiki]="https://wiki.archlinux.org/index.php?search="
websearch[debianpkg]="https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords="

# Gaming
websearch[steamdb]="https://steamdb.info/search/?q="
websearch[protondb]="https://www.protondb.com/search?q="
websearch[pcgamingwiki]="https://www.pcgamingwiki.com/w/index.php?search="
websearch[lutris]="https://lutris.net/games?q="

# Game Wikis
websearch[dragonsdogmawiki]="https://dragonsdogma.fandom.com/wiki/Special:Search?query="
websearch[graveyardkeeperwiki]="https://graveyardkeeper.fandom.com/wiki/Special:Search?query="
websearch[stardewwiki]="https://stardewvalleywiki.com/mediawiki/index.php?search="
websearch[valheim]="https://valheim.fandom.com/wiki/Special:Search?query="

# Development
websearch[github]="https://github.com/search?q="
websearch[gitlab]="https://gitlab.com/search?search="
websearch[googleOpenSource]="https://opensource.google/projects/search?q="
websearch[sourceforge]="https://sourceforge.net/directory/?q="
websearch[stackoverflow]="https://stackoverflow.com/search?q="


####################
# Handle Arguments #
####################
# this function is a simple parser designed to get the menu program and then exit prematurally
function get_menu_program() {
    # If script is run with '-d', it will use 'dmenu'
    # If script is run with '-f', it will use 'fzf'
    # If script is run with '-r', it will use 'rofi'
    while getopts "dfrh" arg 2>/dev/null; do
        case "${arg}" in
        d)
            echo "${DMENU}"
            return 0
            ;;
        f)
            echo "${FMENU}"
            return 0
            ;;
        h)
            help
            return 1
            ;;
        *)
            echo -e "invalid option:\nType $(basename "$0") -h for help" >/dev/stderr
            return 1
            ;;
        esac
    done
    echo "Did not find menu argument, using \${DMENU}" >/dev/stderr
    # shellcheck disable=SC2153
    echo "${DMENU}"
}

function main() {
    # As this is loaded from other file it is technically not defined
    # shellcheck disable=SC2154 # Choosing  a search engine by name from array above.
    engine=$(printf '%s\n' "${!websearch[@]}" | sort | ${MENU} 'Choose search engine:') || exit 1

    # Getting the URL of the search engine we chose.
    url="${websearch["${engine}"]}"

    # Searching the chosen engine.
    query=$(printf '%s' "$engine" | ${MENU} 'Enter search query:')

    #query="$(echo -n "${query}" | jq --slurp --raw-input --raw-output @uri)"
    # Display search results in web browser
    ${DMBROWSER} "${url}${query}"
}

MENU="$(get_menu_program "$@")"
main
