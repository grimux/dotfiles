#!/usr/bin/env sh
#
# Wrapper script to run and manage the Nintendo 64
# emulator 1964 Goldeneye Perfect Dark build.
#
# Jake Meredith
#

##############
### Config ###
##############
# Location of emulator
emudir="$HOME/Games/1964"

# Executable
exe="1964.exe"

# Error flag
flag=0


############
### Data ###
############
# List of N64 Games
# The array index corresponds to the rom's filename
# Array contents is the full name of the game
declare -A game_list=(
	[ge]="GoldenEye 007"
	[gf]="Goldfinger 007"
	[pd]="Perfect Dark"
)




#################
### Functions ###
#################
#
# Help Section
help_section() {
	echo "A script to launch 1964 GEPD Edition"
	echo
	echo "Syntax: 1964 [-c|h|l] [game name]"
	echo "options:"
	echo "c     Configure 1964."
	echo "h     Print this help screen."
	echo "l     List installed mods."
	echo "r     Open readme."
	echo
}

# Call to wine.
call_wine() {
	local title
	local overclock

	title="$1"
	overclock="$2"

	# Call to wine.
	# -g: rom name
	# -f: fullscreen
	# -o: overclock amount; 6 for Goldeneye, 9 for Perfect Dark.
	wine \
		$emudir/$exe \
		-g "$title.z64" \
		-f \
		-o "$overclock"

}

# List the games
list_games() {
	for i in ${!game_list[@]}; do
		echo "$i -- ${game_list[$i]}"
	done
}

# Launch game
launch_game() {
	local game=$1

	case "$game" in
		ge) call_wine "$game" "6";;
		pd) call_wine "$game" "9";;
	esac
}

# Launch config
launch_config() {
	wine $emudir/$exe
}

# Open Readme
open_readme() {
	less $emudir/BUNDLE_README.txt
}

# Get arguments
get_arguments() {
	while getopts ":hclr" option; do
		case $option in
			# Launch the emulator to configure it.
			c) launch_config; exit;;

			# Help section and usage.
			h) help_section; exit;;

			# List the games.
			l) list_games; exit;;

			# Open the readme for 1964.
			r) open_readme; exit;;

			# Invalid option.
			\?) echo "Error: Invalid option"; exit;;

		esac
	done
}


############
### Main ###
############
main() {
	get_arguments "$@"

	# If no argument, then list the games
	if [ -z "$1" ]; then
		list_games
		exit
	fi

	# Loop through array, searching for a match
	for i in "${!game_list[@]}"; do
		# if array[i] == arg
		if [ "$i" == "$1" ]; then
			# Unset error flag
			flag=0
			launch_game "$i"
			break
		fi

		# if arg is not found in array
		# Set error flag
		flag=1
	done

	# If the mod is not in the list
	if [ $flag -eq 1 ]; then
		echo "Invalid game."
	fi
}

main "$@"
