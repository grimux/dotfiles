#!/usr/bin/env bash
# Script for launching quake and the vairous mods I play

# Variables
quakedir="$HOME/Games/quake"
choice="$1"

# Mods List
mods_list=(
	"ad"
	"bbelief"
	"copper"
	"dopa"
	"evilexhumed"
	"hipnotic"
	"honey"
	"hwjam"
	"hwjam2"
	"hwjam3"
	"quake15"
	"quake64"
	"rogue"
	"slayertest"
	"travail"
	"xmasjam2018"
	"xmasjam2019"
	"xmasjam2020"
)

# Functions
# Help Section
help_section() {
	echo "A script to launch Quake and its various mods."
	echo
	echo "Syntax: quake [-h|d|i|l] [mod name]"
	echo "options:"
	echo "h     Print this help screen."
	echo "d     Choose mod in dmenu."
	echo "i     Run Quake-Injector."
	echo "l     List installed mods."
	echo
}

# List the mods
list_mods() {
	for i in "${mods_list[@]}"; do
		echo "$i"
	done
}

# Launch Quake
launch_quake() {
	mangohud --dlsym gamemoderun quakespasm -game $1
}

# Check array for matching mod name
check_mods() {
	# Exists flag
	exists=0

	# Loop through array, searching for a match
	for i in "${mods_list[@]}"; do
		if [ "$i" == "$choice" ]; then
			exists=1
			break
		else
			exists=0
		fi
	done
	
	# Return flag value
	# 1 exists, 0 does not exists
	echo $exists
}

# Quake Injector
quake_injector() {
	$quakedir/quake-injector/bin/QuakeInjector
}

# Dmenu
choose_in_dmenu() {
	choice=$(printf '%s\n' "${mods_list[@]}" | dmenu -i -l 20 -p 'Quake mod:')
	[[ -z "$choice" ]] && echo "Nothing selected" && exit 1
}

# Get arguments
while getopts ":dhil" option; do
	case $option in
		d)
			choose_in_dmenu
			;;
		h)
			help_section
			exit
			;;
		l)
			list_mods
			exit
			;;
		i)
			quake_injector
			exit
			;;
		\?)
			echo "Error: Invalid option"
			exit
			;;
	esac
done

# Main script
# If no argument, then launch copper
if [ -z "$1" ]; then
	launch_quake "copper"
	exit
fi

# Check if game exists in array.
# 0 if doesn't exist, 1 if it does.
# If the game exists, launch it.
does_mod_exist=$(check_mods)
if [[ does_mod_exist -eq 1 ]]; then
	launch_quake $choice
	exit
else
	echo "Invalid game."
	exit 1
fi
