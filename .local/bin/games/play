#!/usr/bin/env sh
#
# A wrapper script to launch Lutris and Steam games from the terminal.
#

# Game list
game_list=($(lutris -l -o | awk -F'|' '{print $3}'))
choice="$1"

# Functions
# Help Section
help_section() {
	echo "A script to launch Lutris and Steam games."
	echo
	echo "Syntax: play [-h|l|d] [game name]"
	echo "options:"
	echo "h     Print this help screen."
	echo "l     List installed games."
	echo "d     List games in dmenu."
	echo
}

# List the games
list_games() {
	echo "What would you like to play?"
	echo
	for i in "${game_list[@]}"; do
		echo $i
	done
}

# Check array for matching game name
check_games() {
	# Exists flag
	exists=0

	# Loop through array, searching for a match
	for i in "${game_list[@]}"; do
		if [ "$i" == "$choice" ]; then
			exists=1
			break
		else
			exists=0
		fi
	
	done

	# Return flag value
	# 1 exists, 0 does not exists
	echo $exists
}


# Launch game
launch_game() {
	lutris lutris:rungame/$1
}

# Dmenu
choose_in_dmenu() {
	choice=$(printf '%s\n' "${game_list[@]}" | dmenu -i -l 20 -p 'Game:')
	[[ -z "$choice" ]] && echo "Nothing selected" && exit 1
}

# Get arguments
while getopts ":dhl" option; do
	case $option in
		d)
			choose_in_dmenu
			;;
		h)
			help_section
			exit
			;;
		l)
			list_games
			exit
			;;
		\?)
			echo "Error: Invalid option"
			exit
			;;
	esac
done

# Main script
# If no argument, then list games.
if [ -z "$1" ]; then
	list_games
	exit
fi

# Check if game exists in array.
# 0 if doesn't exist, 1 if it does.
# If the game exists, launch it.
does_game_exist=$(check_games)
if [[ does_game_exist -eq 1 ]]; then
	launch_game $choice
	exit
else
	echo "Invalid game."
	exit 1
fi
