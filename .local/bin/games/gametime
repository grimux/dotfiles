#!/usr/bin/env bash
#
# Script for launching my game launchers
#

# e - script stops on error
# u - error if undefined variable
# o pipefail - script fails if command piped fails
# x - output each line (debug)
#
#set -euox pipefail
set -uo pipefail

is_steam_running=0
is_lutris_running=0

# Launch the launchers
launch_launchers_minimized() {
	# Send a notification.
	notify-send "gametime" "Starting Steam and Lutris..."

	# Launch steam with or without manghud
	#mangohud steam-runtime -nochatui -nofriendsui &
	steam -nochatui -nofriendsui -silent &


	# Launch lutris
	lutris &

	# Buggy and doesn't work
	#xdotool search --onlyvisible --classname --sync lutris windowminimize --sync
}

# Start the game launchers, both windows up.
launch_launchers_maximized() {
	# Send a notification.
	notify-send "gametime" "Starting Steam and Lutris..."

	# Launch steam normally with no chat or friends list open.
	steam -nochatui -nofriendsui &

	# Launch steam with manghud and the same options.
	#mangohud steam-runtime -nochatui -nofriendsui &

	# Launch lutris.
	lutris &
}

get_process_id() {
	local launcher_name="$1"
	local process_id=$(pgrep --full "$launcher_name")

	echo "$process_id"
}

# Kill the launchers
kill_launchers() {
	notify-send "gametime" "Killing Steam and Lutris..."

	pkill "steam"
	pkill --full "lutris"
}

# Check for already running processes.  Set a flag
check_processes() {
	#lutris_process=$(ps -ax | grep lutris | awk '{print $1}' | wc -l)
	#steam_process=$(pgrep steam)

	local lutris_process=$(get_process_id "lutris")
	local steam_process=$(get_process_id "steam")

	if [ -z "$lutris_process" ]; then
		is_lutris_running=0
	else
		is_lutris_running=1
	fi

	if [ -z "$steam_process" ]; then
		is_steam_running=0
	else
		is_steam_running=1
	fi
}

# Get arguments
get_arguments() {
	while getopts ":kh" option; do
		case $option in
			k)
				kill_all
				exit
				;;
			h)
				help_section
				exit
				;;
			\?)
				echo "Error: Invalid option"
				exit 1
				;;
		esac
	done
}

# Main
main() {
	get_arguments "$@"
	local arguments="$@"

	check_processes
	if [ $is_steam_running -eq 1 ] || [ $is_lutris_running -eq 1 ]; then
		kill_launchers
	else
		#launch_launchers_minimized
		launch_launchers_maximized
	fi

	echo done
}

testing() {
	local steam_process_id=$(get_process_id "steam")
	local lutris_process_id=$(get_process_id "lutris")

	if [ -z "$steam_process_id" ] || [ -z "$lutris_process_id" ]; then
		kill_launchers
	else
		start_launchers
		minimize_launchers
	fi
}

#testing "$@"
main "$@"
